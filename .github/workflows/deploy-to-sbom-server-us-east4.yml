name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Authenticate to Google Cloud
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential helper
    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-east4-docker.pkg.dev --quiet
        
    # Create the repository if it doesn't exist
    - name: Create Artifact Registry repository
      run: |
        # Try to create the repository, ignore if it already exists
        gcloud artifacts repositories create sbom-finder \
          --repository-format=docker \
          --location=us-east4 \
          --description="Docker repository for SBOM Finder" \
          --quiet || echo "Repository already exists"
        
    # Build the Docker image and tag with Artifact Registry path
    - name: Build Docker image
      run: |
        # Create Dockerfile if not exists
        if [ ! -f Dockerfile ]; then
          echo 'FROM python:3.12-slim' > Dockerfile
          echo '' >> Dockerfile
          echo 'WORKDIR /app' >> Dockerfile
          echo 'COPY requirements.txt .' >> Dockerfile
          echo 'RUN pip install --no-cache-dir -r requirements.txt gunicorn' >> Dockerfile
          echo '' >> Dockerfile
          echo 'COPY . .' >> Dockerfile
          echo 'ENV PORT=8080' >> Dockerfile
          echo 'EXPOSE 8080' >> Dockerfile
          echo '' >> Dockerfile
          echo '# Set database URI to mounted directory' >> Dockerfile
          echo 'ENV SQLITE_PATH=/tmp/sboms.db' >> Dockerfile
          echo '' >> Dockerfile
          echo 'CMD ["gunicorn", "--bind", "0.0.0.0:8080", "app:app"]' >> Dockerfile
        fi
        
        # Build and tag with Artifact Registry path
        docker build -t us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:${{ github.sha }} .
        docker tag us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:${{ github.sha }} us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:latest

    # Push the Docker image to Artifact Registry
    - name: Push Docker image to Artifact Registry
      run: |
        # Print authentication status before push
        gcloud auth list
        
        # Push images
        docker push us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:${{ github.sha }}
        docker push us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:latest

    # Create GCS bucket for SBOM files
    - name: Create GCS bucket
      id: create_bucket
      run: |
        # Generate a unique bucket name using project ID and a suffix
        BUCKET_NAME="${{ secrets.GCP_PROJECT_ID }}-sbom-files"
        
        # Check if bucket exists, create if it doesn't
        if ! gsutil ls -b gs://$BUCKET_NAME >/dev/null 2>&1; then
          echo "Creating bucket: $BUCKET_NAME"
          gsutil mb -l us-east4 gs://$BUCKET_NAME
        else
          echo "Bucket $BUCKET_NAME already exists"
        fi
        
        # Make sure bucket is readable
        gsutil iam ch allUsers:objectViewer gs://$BUCKET_NAME
        
        # Save bucket name for later steps
        echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      id: deploy
      run: |
        gcloud run deploy sbom-finder \
          --image=us-east4-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/sbom-finder/sbom-server:latest \
          --platform=managed \
          --region=us-east4 \
          --allow-unauthenticated \
          --memory=512Mi \
          --cpu=1 \
          --port=8080 \
          --set-env-vars="SQLITE_PATH=/tmp/sboms.db" \
          --set-env-vars="FLASK_ENV=production" \
          --set-env-vars="CORS_ORIGIN=https://sbom-frontend-git-main-sneha-joyces-projects.vercel.app" \
          --set-env-vars="GCS_BUCKET_NAME=${{ steps.create_bucket.outputs.bucket_name }}" \
          --timeout=300s
      
    # Get deployed application URL
    - name: Get Application URL
      run: |
        SERVICE_URL=$(gcloud run services describe sbom-finder --region=us-east4 --format='value(status.url)')
        echo "app_url=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "Application deployed to: $SERVICE_URL"
